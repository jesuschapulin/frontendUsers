package com.chaps.libreriaChaps;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import javax.annotation.PostConstruct;
public class TestService {
		public TestService() {
		}
	    public String postService() {
	    	String salida="";
	        String baseUrl = "http://192.168.1.9:9998/service/testPostJava?nombre=jesus&edad=treinta";
	        try {
	        URL url = new URL(baseUrl);
	        HttpURLConnection con = (HttpURLConnection) url.openConnection();
	        con.setRequestMethod("POST");
	        con.setDoOutput(false);
//	        con.setRequestProperty("User-Agent", "Mozilla/5.0");
//	        con.setRequestProperty("Accept", "application/json");
//	        con.setRequestProperty("Content-Length", "0");

//	        int status = con.getResponseCode();
//	        BufferedReader in = new BufferedReader(
//	                new InputStreamReader(
//	                    status >= 400 ? con.getErrorStream() : con.getInputStream()
//	                )
//	        );
//	        String inputLine;
//	        StringBuilder respuesta = new StringBuilder();
//	        while ((inputLine = in.readLine()) != null) {
//	            respuesta.append(inputLine);
//	        }
//	        in.close();
//	        con.disconnect();

	        
	        int status = con.getResponseCode();
	        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
	        String inputLine;
	        StringBuilder respuesta = new StringBuilder();

	        while ((inputLine = in.readLine()) != null) {
	            respuesta.append(inputLine);
	        }
	        
	        System.out.println("Respuesta del servidor: " + respuesta.toString());
	        if (status==200) return salida="exito en peticion con java http nativo";
	        else return salida="fallo peticion con java http nativo";
	        }catch(Exception exx) {
	        	exx.printStackTrace();
	        }
	        return salida;
	    }
	    public static void main (String args[]) {
	    	TestService ser=new TestService();
	    	String rerpuesta=ser.postService();
	    }



############################################################################################################################
############################################################################################################################
############################################################################################################################
################################################orquestador de permisos ####################################################
Map<String, List<PermisoRequerido>> mapaPermisos  = Map.of(
		    "1", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/productos")),
		    "2", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/productos/delete")),
		    "3", List.of(new PermisoRequerido("PUT", "http://localhost/9093/service/productos")),
		    "4", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/categorias")),
		    "5", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/categorias/delete")),
		    "6", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/permisos/empleados")),
		    "7", List.of(new PermisoRequerido("GET", "http://localhost/9093/service/permisos/empleados")),
		    "8", List.of(new PermisoRequerido("GET", "http://localhost/9093/service/permisos")),
		    "9", List.of(new PermisoRequerido("POST", "http://localhost/9093/service/permisos/delete"))
		);
	public class PermisoRequerido {
	    public String metodo;
	    public String pathRegex;

	    public PermisoRequerido(String metodo, String pathRegex) {
	        this.metodo = metodo;
	        this.pathRegex = pathRegex;
	    }
	    public String getMetodo() {
	        return metodo;
	    }

	    public String getPathRegex() {
	        return pathRegex;
	    }
	}
    private boolean autoriza(List<String> permisos, String metodo, String path) {
    	Integer[] prods = new Integer[] {3};
        for (String permiso : permisos) {
            List<PermisoRequerido> reglas = mapaPermisos.get(permiso);
            if (reglas != null) {
                for (PermisoRequerido r : reglas) {
                    if (r.metodo.equalsIgnoreCase(metodo) &&
                        path.matches(r.pathRegex) && Arrays.asList(prods).contains(1)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
	
}


